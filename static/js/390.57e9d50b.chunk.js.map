{"version":3,"file":"static/js/390.57e9d50b.chunk.js","mappings":"+LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAqF,wB,SCK/EA,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC3B,SAAC,KAAD,CACEC,UAAWC,EAEXC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMV,GAJjB,UAME,eAAIM,UAAWC,EAAf,UACE,uBAAIF,OALDD,EAHoB,IAa7B,OAAO,eAAIE,UAAWC,EAAf,SAA6BL,GACrC,EAED,IAEAJ,EAAUa,aAAe,CACvBZ,QAAS,G,+GC1BX,GAAiB,E,8EC4DjB,EArDa,WACX,OAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BP,EAAAA,EAAAA,WAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KACMC,EAAcC,OAAOL,EAAOM,IAAI,SAClCD,OAAOL,EAAOM,IAAI,SAClB,GAEJC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMC,GAAN,2FAEhBN,GAAW,GAFK,UAGuBO,EAAAA,EAAAA,IAAcD,GAHrC,gBAGR5B,EAHQ,EAGRA,QAAS8B,EAHD,EAGCA,YACjBf,EAASf,GACTiB,EAAca,GALE,kDAOhBC,QAAQC,IAAI,KAAMC,SAPF,yBAShBX,GAAW,GATK,6EAAH,sDAYjBK,EAAYJ,EACb,GAAE,CAACA,IAMJ,OACE,kBAAMhB,UAAWC,EAAAA,KAAjB,WACE,4CACA,SAACT,EAAA,EAAD,CAAWC,QAASc,IACnBO,IAAW,SAACa,EAAA,EAAD,IACXlB,EAAa,IACZ,SAAC,IAAD,CACET,UAAWC,EAAAA,WACX2B,WAAW,MACXC,UAAU,IACVC,aAdY,SAAAC,GAClBlB,EAAU,CAAEQ,KAAMU,EAAEC,SAAW,GAChC,EAaOC,mBAAoB,EACpBC,UAAWzB,EACX0B,cAAc,IACdC,sBAAuB,KACvBC,sBAAsB,WACtBC,gBAAgB,aAChBC,UAAWvB,EAAc,MAKlC,C,yLCzDKwB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAET9B,OAAQ,CACN+B,QAAS,sCAGArB,EAAa,mCAAG,WAAMD,GAAN,+EACT,QACC,OAFQ,SAGJmB,EAAStB,IAAT,oBAFL,QAEK,YADJ,OACI,iBACwBG,IAJpB,uBAGnBuB,EAHmB,EAGnBA,KAHmB,kBAMpBA,GANoB,2CAAH,sDAQbC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAStB,IAAT,iBAAuB4B,EAAvB,aADG,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZG,EAAW,mCAAG,WAAO1B,EAAM2B,GAAb,yFACFR,EAAStB,IAAT,6BACCG,EADD,kBACe2B,IAFb,uBACjBJ,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,wDAMXK,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAAStB,IAAT,iBAAuBgC,IADlB,uBACpBN,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAIdO,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAStB,IAAT,iBAAuBgC,EAAvB,aADG,uBAClBN,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/page/Home/Home.modules.css?887e","components/page/Home/Home.jsx","shared/services/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieList_link__+cn-g\",\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\"};","import PropTypes from 'prop-types';\n\nimport { useLocation, Link } from 'react-router-dom';\n\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ results }) => {\n  const location = useLocation();\n  const elements = results.map(({ id, title }) => (\n    <Link\n      className={styles.link}\n      key={id}\n      to={`/movies/${id}`}\n      state={{ from: location }}\n    >\n      <li className={styles.item}>\n        <p>{title}</p>\n      </li>\n    </Link>\n  ));\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n  results: [],\n};\n\nMovieList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import styles from './Home.modules.css';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from '../../MovieList/MovieList';\nimport Loader from 'shared/Loader/Loader';\nimport { fetchTrending } from 'shared/services/fetch-api';\nimport ReactPaginate from 'react-paginate';\n\nconst Home = () => {\n  const [items, setItems] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [params, setParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const currentPage = Number(params.get('page'))\n    ? Number(params.get('page'))\n    : 1;\n\n  useEffect(() => {\n    const getTrending = async page => {\n      try {\n        setLoading(true);\n        const { results, total_pages } = await fetchTrending(page);\n        setItems(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrending(currentPage);\n  }, [currentPage]);\n\n  const handleClick = e => {\n    setParams({ page: e.selected + 1 });\n  };\n\n  return (\n    <main className={styles.main}>\n      <h1>Trending today</h1>\n      <MovieList results={items} />\n      {loading && <Loader />}\n      {totalPages > 1 && (\n        <ReactPaginate\n          className={styles.pagination}\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handleClick}\n          pageRangeDisplayed={3}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\nexport const fetchTrending = async page => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\nexport const fetchCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\nexport const fetchMovies = async (page, query) => {\n  const { data } = await instance.get(\n    `/search/movie?page=${page}&query=${query}`\n  );\n  return data;\n};\nexport const fetchMovieById = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\nexport const fetchReviews = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n"],"names":["MovieList","results","location","useLocation","elements","map","id","title","className","styles","to","state","from","defaultProps","useState","items","setItems","totalPages","setTotalPages","useSearchParams","params","setParams","loading","setLoading","currentPage","Number","get","useEffect","getTrending","page","fetchTrending","total_pages","console","log","message","Loader","breakLabel","nextLabel","onPageChange","e","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage","instance","axios","baseURL","api_key","data","fetchCredits","movieId","fetchMovies","query","fetchMovieById","movieID","fetchReviews"],"sourceRoot":""}