{"version":3,"file":"static/js/458.75a49203.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Searchbar/Seachbar.module.css?40c0","components/Searchbar/initialState.js","components/Searchbar/Seachbar.jsx","webpack://react-homework-template/./src/components/page/Movies/Movies.module.css?b5a8","components/page/Movies/Movies.jsx","shared/services/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieList_link__+cn-g\",\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\"};","import PropTypes from 'prop-types';\n\nimport { useLocation, Link } from 'react-router-dom';\n\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ results }) => {\n  const location = useLocation();\n  const elements = results.map(({ id, title }) => (\n    <Link\n      className={styles.link}\n      key={id}\n      to={`/movies/${id}`}\n      state={{ from: location }}\n    >\n      <li className={styles.item}>\n        <p>{title}</p>\n      </li>\n    </Link>\n  ));\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nexport default MovieList;\n\nMovieList.defaultProps = {\n  results: [],\n};\n\nMovieList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Seachbar_searchbar__N0PA3\",\"form\":\"Seachbar_form__3xclA\",\"button\":\"Seachbar_button__K6JiL\",\"label\":\"Seachbar_label__yUIQ9\",\"input\":\"Seachbar_input__BFkOO\"};","const initialState = {\n  search: '',\n};\nexport default initialState;\n","import { useState } from 'react';\nimport styles from './Seachbar.module.css';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport initialState from './initialState';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state.search);\n    setState({ ...initialState });\n  };\n\n  const { query } = state;\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.label}>Search</span>\n          <ImSearch />\n        </button>\n\n        <input\n          name=\"search\"\n          value={query}\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\nexport default Searchbar;\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Movies_pagination__BVHIu\",\"activePage\":\"Movies_activePage__RL6-o\",\"disabled\":\"Movies_disabled__Rp+ab\"};","import Searchbar from '../../Searchbar/Seachbar';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'shared/services/fetch-api';\nimport { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Notify } from 'notiflix';\nimport Loader from 'shared/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport styles from './Movies.module.css';\nimport ReactPaginate from 'react-paginate';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  const { query, page } = params;\n  const currentPage = Number(page) ? Number(page) : 1;\n  const [totalPages, setTotalPages] = useState(0);\n  const [movie, setMovie] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const getMovie = async page => {\n        const { results, total_pages } = await fetchMovies(page, query);\n        if (!results.length) {\n          Notify.failure('No found');\n          setTotalPages(0);\n        } else {\n          setTotalPages(total_pages);\n          setMovie(results);\n        }\n      };\n      getMovie(currentPage, query);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [query, currentPage, page]);\n\n  const onSearchMovie = useCallback(\n    query => {\n      if (query !== searchQuery) {\n        setSearchParams({ query, page: 1 });\n        setMovie([]);\n        setSearchQuery(query);\n      } else {\n        Notify.warning('you have already entered this query!');\n      }\n    },\n    [setSearchParams, searchQuery]\n  );\n\n  const handlePageClick = e => {\n    setSearchParams({ query, page: e.selected + 1 });\n  };\n\n  return (\n    <main style={{ paddingBottom: 20 }}>\n      <Searchbar onSubmit={onSearchMovie} />\n      <MovieList results={movie} />\n      {error && <p>Error{error.message}</p>}\n      {totalPages > 1 && (\n        <ReactPaginate\n          className={styles.pagination}\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={3}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\nexport const fetchTrending = async page => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\nexport const fetchCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\nexport const fetchMovies = async (page, query) => {\n  const { data } = await instance.get(\n    `/search/movie?page=${page}&query=${query}`\n  );\n  return data;\n};\nexport const fetchMovieById = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\nexport const fetchReviews = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n"],"names":["MovieList","results","location","useLocation","elements","map","id","title","className","styles","to","state","from","defaultProps","search","onSubmit","useState","initialState","setState","query","e","preventDefault","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","prevState","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","page","currentPage","Number","totalPages","setTotalPages","movie","setMovie","searchQuery","setSearchQuery","loading","setLoading","error","setError","useEffect","getMovie","fetchMovies","total_pages","length","Notify","err","message","onSearchMovie","useCallback","style","paddingBottom","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage","Loader","instance","axios","baseURL","api_key","fetchTrending","get","data","fetchCredits","movieId","fetchMovieById","movieID","fetchReviews"],"sourceRoot":""}