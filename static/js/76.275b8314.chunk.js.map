{"version":3,"file":"static/js/76.275b8314.chunk.js","mappings":"0QACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA0E,kB,mBCgD1E,EA5CkB,WAChB,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,kHAESC,EAAAA,EAAAA,IAAaJ,GAFtB,gBAENK,EAFM,EAENA,KACRR,EAAaQ,GAHC,gDAILC,EAJK,KAILA,SACTP,GAAS,GACTQ,QAAQC,IAAIF,EAASG,KAAKC,SANZ,yDAAH,qDASfP,EAAUH,EACX,GAAE,CAACA,KAEF,gCACGF,IAAS,SAACa,EAAA,QAAD,KACV,SAAC,KAAD,CAAMC,UAAWC,EAAjB,SACGjB,EAAUkB,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAAK,OAC/B,gBAAIJ,UAAWC,EAAf,WACE,gBACEI,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,kCAIFC,IAAG,UAAKH,EAAMI,SAEhB,iBAAKR,UAAWC,EAAhB,WACE,uBAAIG,EAAMI,QACV,uCAEE,0BAAOJ,EAAMK,oBAbcL,EAAMM,QADR,QAsBxC,C,2CC3CD,UAJqB,WACnB,OAAO,0CACR,C,yLCAKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAGAC,EAAa,mCAAG,WAAMC,GAAN,+EACT,QACC,OAFQ,SAGJN,EAASO,IAAT,oBAFL,QAEK,YADJ,OACI,iBACwBD,IAJpB,uBAGnBpB,EAHmB,EAGnBA,KAHmB,kBAMpBA,GANoB,2CAAH,sDAQbL,EAAY,mCAAG,WAAMJ,GAAN,yFACHuB,EAASO,IAAT,iBAAuB9B,EAAvB,aADG,uBAClBS,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAIZsB,EAAW,mCAAG,WAAOF,EAAMG,GAAb,yFACFT,EAASO,IAAT,6BACCD,EADD,kBACeG,IAFb,uBACjBvB,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,wDAMXwB,EAAc,mCAAG,WAAMC,GAAN,yFACLX,EAASO,IAAT,iBAAuBI,IADlB,uBACpBzB,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAId0B,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASO,IAAT,iBAAuBI,EAAvB,aADG,uBAClBzB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/page/NotFoundPage/NotFoundPage.jsx","shared/services/fetch-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Cast_link__VaL-5\",\"item\":\"Cast_item__a0CDL\",\"div\":\"Cast_div__PH4d5\"};","import { useEffect, useState } from 'react';\nimport { fetchCredits } from 'shared/services/fetch-api';\nimport { useParams, Link } from 'react-router-dom';\nimport styles from './Cast.module.css';\nimport NotFoundPage from 'components/page/NotFoundPage/NotFoundPage';\nconst MovieCast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchCredits(movieId);\n        setMovieCast(cast);\n      } catch ({ response }) {\n        setError(true);\n        console.log(response.data.message);\n      }\n    };\n    fetchCast(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {error && <NotFoundPage />}\n      <Link className={styles.link}>\n        {movieCast.slice(0, 12).map(actor => (\n          <li className={styles.item} key={actor.cast_id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                  : `https://via.placeholder.com/200`\n              }\n              alt={`${actor.name}`}\n            />\n            <div className={styles.div}>\n              <p>{actor.name}</p>\n              <p>\n                Character:\n                <span>{actor.character}</span>\n              </p>\n            </div>\n          </li>\n        ))}\n      </Link>\n    </>\n  );\n};\n\nexport default MovieCast;\n","const NotFoundPage = () => {\n  return <h1>Not found page</h1>;\n};\n\nexport default NotFoundPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: 'ac91775ba29254b7e75060011bf34a90',\n  },\n});\nexport const fetchTrending = async page => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\nexport const fetchCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\nexport const fetchMovies = async (page, query) => {\n  const { data } = await instance.get(\n    `/search/movie?page=${page}&query=${query}`\n  );\n  return data;\n};\nexport const fetchMovieById = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\nexport const fetchReviews = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n"],"names":["useState","movieCast","setMovieCast","error","setError","movieId","useParams","useEffect","fetchCast","fetchCredits","cast","response","console","log","data","message","NotFoundPage","className","styles","slice","map","actor","src","profile_path","alt","name","character","cast_id","instance","axios","baseURL","params","api_key","fetchTrending","page","get","fetchMovies","query","fetchMovieById","movieID","fetchReviews"],"sourceRoot":""}